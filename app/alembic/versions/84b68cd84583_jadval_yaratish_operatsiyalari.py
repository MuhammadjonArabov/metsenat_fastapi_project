"""Jadval yaratish operatsiyalari

Revision ID: 84b68cd84583
Revises: 
Create Date: 2024-07-18 14:59:50.031454

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from app.models.student_sponsor import SponsorType, SponsorPerformType, StudentType


# revision identifiers, used by Alembic.
revision: str = "84b68cd84583"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sponsor",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("phone", sa.String(length=14), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("organization", sa.String(length=225), nullable=True),
        sa.Column(
            "sponsor_perform_type",
            sqlalchemy_utils.types.choice.ChoiceType(SponsorPerformType),
            nullable=True,
        ),
        sa.Column(
            "sponsor_type",
            sqlalchemy_utils.types.choice.ChoiceType(SponsorType),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_sponsor_id"), "sponsor", ["id"], unique=False)
    op.create_table(
        "universities",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "students",
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("phone", sa.String(), nullable=False),
        sa.Column("contract_amount", sa.Integer(), nullable=True),
        sa.Column("university_id", sa.Integer(), nullable=True),
        sa.Column(
            "student_type",
            sqlalchemy_utils.types.choice.ChoiceType(StudentType),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["university_id"],
            ["universities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "student_sponsor",
        sa.Column("amount", sa.Numeric(precision=60, scale=6), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=True),
        sa.Column("sponsor_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["sponsor_id"],
            ["sponsor.id"],
        ),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["students.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("student_sponsor")
    op.drop_table("students")
    op.drop_table("universities")
    op.drop_index(op.f("ix_sponsor_id"), table_name="sponsor")
    op.drop_table("sponsor")
    # ### end Alembic commands ###
